<ul>
  <% @workplaces.each do |workplace| %>
  <li><%= link_to workplace.name, workplace_path(workplace.id) %></li>
  <% end %>
</ul>

<p>Filters:</p>

<div class="filters-container">
  <div class="row">
    <div class="container">
      <% @features.each do |feature| %>
      <div class="col-sm-4">
      <a href="" class="button-black">
            <span class="text-12"><%= feature.name %></span>
            <div><%= image_tag(feature.icon+"_small") %></div>
        </a>
      </div>
      <% end %>
    </div>
  </div>
</div>

<div id="map" style="width: 100%; height: 800px;"></div>



<script async defer
src="https://maps.googleapis.com/maps/api/js?key=AIzaSyDTiqJOTZ0WFaiV-EP7hsFFi2cBhYnfP8A&callback=initMap">
</script>
<script type="text/javascript">
  function initMap() {
    var map = new google.maps.Map(document.getElementById('map'), {
      center: {lat: 45.5259795, lng: -73.5951137},
      zoom: 6
    });
    var infoWindow = new google.maps.InfoWindow({map: map});
    var locations = <%= raw @hash.to_json %>
    if (navigator.geolocation) {
      navigator.geolocation.getCurrentPosition(function(position) {
        var pos = {
          lat: position.coords.latitude,
          lng: position.coords.longitude
        };
        infoWindow.setPosition(pos);
        infoWindow.setContent('Location found.');
        map.setCenter(pos);
        map.setZoom(14);
      }, function() {
        handleLocationError(true, infoWindow, map.getCenter());
      });
    } else {
      handleLocationError(false, infoWindow, map.getCenter());
    }
    var infowindow = new google.maps.InfoWindow();
    var marker, i;
    for (i = 0; i < locations.length; i++) {
      var marker = new google.maps.Marker({
        position: locations[i],
        icon: locations[i]["picture"],
        map: map
      });
      google.maps.event.addListener(marker, 'click', (function(marker, i) {
        return function() {
          infowindow.setContent(locations[i]["marker_title"]);
          infowindow.open(map, marker);
        }
      })(marker, i));
    }
  }
  function handleLocationError(browserHasGeolocation, infoWindow, pos) {
    infoWindow.setPosition(pos);
    infoWindow.setContent(browserHasGeolocation ?
      'Error: The Geolocation service failed.' :
      'Error: Your browser doesn\'t support geolocation.');
  }
</script>
